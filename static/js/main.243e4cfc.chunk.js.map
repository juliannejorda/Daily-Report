{"version":3,"sources":["logo.svg","components/particlesConfig.js","components/InitalForm.jsx","components/validWeather.jsx","components/weather.jsx","components/quote.jsx","components/timer.jsx","components/Report.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["particles","number","value","density","enable","value_area","color","shape","type","stroke","width","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","useStyles","makeStyles","theme","form","display","flexDirection","justifyContent","alignItems","background","margin","borderRadius","boxShadow","marginTop","button","backgroundColor","border","fontSize","fontWeight","padding","textDecoration","textShadow","introText","fontFamily","verticalAlign","mainText","textAlign","smallText","fontStyle","validationSchema","yup","name","min","max","required","city","FormUserDetails","formData","setFormData","nextStep","classes","params","particlesConfig","style","position","top","left","height","className","string","delay","id","stopBlinkinOnComplete","bottom","StylesProvider","injectFirst","initialValues","onSubmit","values","errors","touched","label","as","TextField","error","helperText","whileHover","scale","whileTap","variant","theCity","paddingTop","main","marginBottom","overflow","paddingBottom","temp","float","lineHeight","icon","marginLeft","wrapper","gridTemplateColumns","descrip","descripTitle","feels","feelsHeading","feelsP","ValidWeather","props","weather","src","img","description","feelsLike","humidity","incorrect","Weather","useState","setWeather","validCity","setValidCity","setIcon","setCity","setDescription","setFeelsLike","setHumidity","api","url","imgURL","useEffect","axios","get","then","response","info","data","sys","country","feels_like","console","log","catch","context","quoteBody","author","Quote","quote","setQuote","setAuthor","content","time","theTime","theDate","theGreeting","Time","now","Date","toLocaleTimeString","setTime","today","curHr","getHours","newDate","getUTCMonth","getUTCDate","getUTCFullYear","toLocaleDateString","undefined","weekday","year","month","day","fullGreeting","setInterval","newTime","textCenter","Confirm","prevStep","onClick","UserForm","step","setStep","prev","App","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.243e4cfc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Generate a config at https://vincentgarreau.com/particles.js/\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    particles: {\n      number: {\n        value: 100,\n        density: {\n          enable: false,\n          value_area: 600\n        }\n      },\n      color: {\n        value: \"#ffffff\"\n      },\n      shape: {\n        type: \"circle\",\n        stroke: {\n          width: 0,\n          color: \"#000000\"\n        }\n      },\n      opacity: {\n        value: 0.4,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 1,\n          opacity_min: 0.1,\n          sync: false\n        }\n      },\n      size: {\n        value: 3,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 50,\n          size_min: 0.1,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: false,\n        distance: 150,\n        color: \"#ffffff\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 2,\n        direction: \"left\",\n        random: true,\n        straight: true,\n        out_mode: \"out\",\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 600,\n          rotateY: 1200\n        }\n      }\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: {\n          enable: false,\n          mode: \"grab\"\n        },\n        onclick: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        resize: true\n      },\n      modes: {\n        grab: {\n          distance: 200,\n          line_linked: {\n            opacity: 1\n          }\n        },\n        bubble: {\n          distance: 400,\n          size: 40,\n          duration: 2,\n          opacity: 8,\n          speed: 3\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4\n        },\n        push: {\n          particles_nb: 4\n        },\n        remove: {\n          particles_nb: 2\n        }\n      }\n    },\n    retina_detect: true\n  };\n  ","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Formik, Form, Field } from \"formik\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import { Header } from './Header';\nimport { Button } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport Container from \"react-bootstrap/Container\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ParticleEffectButton from \"react-particle-effect-button\";\nimport { motion } from \"framer-motion\";\nimport particlesConfig from \"./particlesConfig\";\nimport Particles from \"react-particles-js\";\nimport { Typewriter } from \"react-typewriting-effect\";\nimport \"react-typewriting-effect/dist/index.css\";\nimport Fade from \"react-reveal/Fade\";\nimport \"./InitalForm.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    // background: \"linear-gradient(to left bottom, #3494e6, #7a8ce7, #ab82dc, #d176c8, #ec6ead)\",\n    background: \"#F0F8FF\",\n    opacity: \"0.9\",\n    width: \"40rem\",\n    //  width: \"auto\",\n    margin: \"auto\",\n    // marginLeft: \"22%\",\n    //marginLeft: \"22vw\",\n    // padding: \"5% 0\"\n    // height: \"\"\n    borderRadius: \"35px\",\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    marginTop: \"10px\",\n  },\n  button: {\n    // margin: theme.spacing(1),\n    // background: 'blue',\n    // padding: \"5%\",\n    margin: \"3%\",\n    boxShadow: \"inset 0px 1px 0px 0px #85c1f5\",\n    background: \"linear-gradient(to bottom, #61b0ff 5%, #80b5ea 100%)\",\n    backgroundColor: \"#61b0ff\",\n    borderRadius: \"6px\",\n    border: \"1px solid #84bbf3\",\n    display: \"inline-block\",\n    color: \"#ffffff\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    padding: \"8px 30px\",\n    textDecoration: \"none\",\n    textShadow: \"0px 1px 0px #528ecc\",\n  },\n  // inputText: {\n  //   border: '1px solid rgba(252, 252, 252, 0.4)',\n  //   background: 'rgba(252, 252, 252, 0.2)',\n  //   width: \"600px\",\n  //   // marginTop: \"50%\"\n  // },\n  // inner: {\n  //   background: \"linear-gradient(to right bottom, #a2d2ff, #b4ccff, #c9c5fc, #ddbdf3, #efb6e5, #f1b4df, #f2b2d9, #f3b0d3, #eab1d7, #e0b2d9, #d6b3db, #cdb4db)\",\n  //   height: \"100vh\"\n  // }\n  introText: {\n    fontSize: \"4rem\",\n    fontFamily: \"'Playfair Display', serif\",\n    verticalAlign: \"middle\",\n  },\n  mainText: {\n    //  marginTop: \"10%\",\n    textAlign: \"center\",\n  },\n  smallText: {\n    fontWeight: \"600\",\n    fontStyle: \"italic\",\n    fontSize: \"20px\",\n    textAlign: \"center\",\n  },\n}));\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .min(2, \"Must be at least 2 characters\")\n    .max(50, \"Name can't be longer than 50 characters\")\n    .required(\"*Name is Required\"),\n  city: yup.string().min(1, \"Enter valid city\").required(\"*Enter a valid city\"),\n});\nconst state = {\n  hidden: false,\n};\n\nconst FormUserDetails = ({ formData, setFormData, nextStep }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Particles\n        // style={{position: \"absolute\"}} height=\"100vh\" width=\"100vw\"\n        // style={{\n        //       position: \"absolute\",\n        //       top: 0,\n        //       left: 0,\n        //       width: \"100%\",\n        //       height: \"100%\"\n        //     }}\n        params={particlesConfig}\n      />\n      <div\n        style={{\n          // position: \"absolute\",\n          // top: 0,\n          // left: 0,\n          // width: \"100%\",\n          // height: \"100%\",\n          display: \"table\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        {/* <motion.div\n  // style={{\n  //         width: \"150px\",\n  //         height: \"150px\",\n  //         background: \"black\"\n  //       }}\n  className={classes.mainText}\n  initial={{ scale: 0 }}\n  animate={{ rotate: 0, scale: 1 }}\n  transition={{\n    type: \"spring\",\n    stiffness: 260,\n    damping: 20,\n    delay: 0.5\n  }}\n  > */}\n        <div className=\"leBody\">\n          <div className={classes.mainText}>\n            <Typewriter\n              string=\"Hello There...\"\n              delay={120}\n              className={classes.introText}\n              id=\"introMainFont\"\n              stopBlinkinOnComplete\n            />\n            <br></br>\n            <Typewriter\n              string=\"Please complete the following form:\"\n              delay={70}\n              stopBlinkinOnComplete\n              className={classes.smallText}\n            />\n          </div>\n          {/* <h1 className={classes.introText}>Hello there</h1> */}\n          {/* </motion.div> */}\n          <Fade bottom>\n            <StylesProvider injectFirst>\n              {/* <Header title='Enter User Details' /> */}\n              <div className=\"forForm\">\n                <Formik\n                  initialValues={formData}\n                  onSubmit={(values) => {\n                    setFormData(values);\n                    nextStep();\n                  }}\n                  validationSchema={validationSchema}\n                >\n                  {({ errors, touched }) => (\n                    <Form className={classes.form}>\n                      <Field\n                        className=\"inputField\"\n                        name=\"name\"\n                        label=\"Enter Name\"\n                        margin=\"normal\"\n                        size=\"large\"\n                        as={TextField}\n                        error={touched.name && errors.name}\n                        helperText={touched.name && errors.name}\n                      />\n                      <Field\n                        className=\"inputField\"\n                        name=\"city\"\n                        label=\"Enter city\"\n                        margin=\"normal\"\n                        size=\"large\"\n                        as={TextField}\n                        error={touched.city && errors.city}\n                        helperText={touched.city && errors.city}\n                      />\n                      {/* <motion.button\n            whileHover={{ scale: 1.1 }}\n    whileTap={{ scale: 0.9 }} >\n            <Button\n            // id=\"button\"\n            // id=\"styledButton\"\n              type='submit'\n              variant='contained'\n              color='primary'\n              // className={classes.button}\n              size=\"large\"\n              \n            >\n              Submit\n            </Button>\n            </motion.button> */}\n                      <motion.button\n                        whileHover={{ scale: 1.1 }}\n                        whileTap={{ scale: 0.9 }}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        className={classes.button}\n                      >\n                        Submit\n                      </motion.button>\n\n                      {/* <ParticleEffectButton\n        \n      >\n        BUTTON CONTENT GOES HERE\n      </ParticleEffectButton> */}\n                    </Form>\n                  )}\n                </Formik>\n              </div>\n            </StylesProvider>\n          </Fade>\n        </div>\n      </div>\n    </>\n  );\n};\n\nFormUserDetails.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n};\n\nexport default FormUserDetails;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Flip from \"react-reveal/Flip\";\n\nconst useStyles = makeStyles(theme => ({\n    theCity: {\n        color: \"white\",\n        paddingTop: \"10px\",\n        fontWeight: \"510\",\n        textShadow: \"2px 2px #696969\",\n        fontSize: \"3.25rem\"\n    },\n    main: {\n\n        background: \"rgba(201, 214, 255, 0.85)\",\n        // background: \"#D6EAF8\",\n        marginTop: \"3%\",\n        marginBottom: \"2%\",\n        textAlign: \"center\",\n        fontFamily: \"'Lato', serif\",\n        width: \"65%\",\n        margin: \"auto\",\n        overflow: \"auto\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(255, 255, 255, 0.19)\",\n        paddingBottom: \"10px\"\n       },\n    temp: {\n        color: \"white\",\n        float: \"left\",\n        fontSize: \"5rem\",\n        // verticalAlign: \"center\"\n        lineHeight: \"128px\",\n        textShadow: \"2px 2px #696969\",\n    },\n    icon: {\n       float: \"right\",\n       width: \"150px\",\n       height: \"auto\",\n       marginLeft: \"22%\"\n    //    marginTop: \"0\",\n    //    marginRight: \"20%\"\n    //    width: \"250px\"\n    // display: \"block\",\n    // clear: \"both\"\n    },\n    wrapper: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\"\n    },\n    descrip: {\n        color: \"white\",\n        textAlign: \"left\",\n        \n    },\n    descripTitle: {\n        textShadow: \"2px 2px #696969\",\n        fontSize: \"3rem\"\n    },\n    feels: {\n        // whiteSpace: \"nowrap\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n    feelsHeading: {\n        // textDecoration: \"underline\",\n        textShadow: \"2px 2px 5px #696969\",\n        fontSize: \"1.7rem\"\n\n    },\n    feelsP: {\n        // textShadow: \"2px 2px 5px #696969\",\n        fontSize: \"1.7rem\",\n    }\n    // feelsP: {\n    //     fontSize: \"1.3rem\"\n    // }\n\n   //   mainReport: {\n   //     height: \"100vh\"\n   //   }\n   }));\n\n\nfunction ValidWeather(props) {\n    const classes = useStyles();\n    return <Flip bottom duration=\"2250\" delay=\"2000\"><div className={classes.main}>\n        <h1 className={classes.theCity}>{props.city}</h1>\n        <div className={classes.wrapper}>\n        <h3 className={classes.temp}>{props.weather}°C</h3>\n        <img className={classes.icon} src={props.img}></img>\n        <div className={classes.descrip}><h3 className={classes.descripTitle}>{props.description}</h3>\n        <div className={classes.feels}>\n        <h5 className={classes.feelsHeading} >Feels like:</h5><h5 className={classes.feelsP}>{props.feelsLike}°C</h5>\n        <h5 className={classes.feelsHeading}>Humidity:</h5><h5 className={classes.feelsP}>{props.humidity}%</h5>\n        \n        </div>\n\n        </div>\n        </div>\n    </div>\n    </Flip>\n}\n\nexport default ValidWeather","import {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ValidWeather from \"./validWeather\";\n\n\n// function Weather(props) {\n//     const [query, setQuery] = useState('');\n//     const [weather, setWeather] = useState({});\n\n\n//     const search = evt => {\n//         if (evt.key === \"Enter\") {\n//           fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n//             .then(res => res.json())\n//             .then(result => {\n//               setWeather(result);\n//               setQuery('');\n//               console.log(result);\n//             });\n//         }\n//       }\n\n   \n    \n\n//     let today = new Date().toLocaleDateString() \n\n//     return (\n//         <div>\n//             {/* <h3>{setQuery(props.city)}</h3> */}\n//             <main>\n//             <h2>{props.city}</h2>\n       \n//     <p> {weather.name}</p>\n    \n\n        \n//         {(typeof weather.main != \"undefined\") ? (\n//         <div>\n//           <div className=\"location-box\">\n//             <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n//             <div className=\"date\">{today}</div>\n//           </div>\n//           <div className=\"weather-box\">\n//             <div className=\"temp\">\n//               {Math.round(weather.main.temp)}°c\n//             </div>\n//             <div className=\"weather\">{weather.weather[0].main}</div>\n//           </div>\n//         </div>\n//         ) : ('')}\n//       </main>\n//         </div>\n//     )\n// }\n\nconst useStyles = makeStyles(theme => ({\n    incorrect: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        background: \"#C9D6FF\",\n        color: \"white\",\n        textShadow: \"2px 2px black\",\n        padding: \"2%\"\n    }\n  //   mainReport: {\n  //     height: \"100vh\"\n  //   }\n  }));\n\nfunction Weather(props){\n    const classes = useStyles();\n    const [weather, setWeather] = useState(\"\");\n    const [validCity, setValidCity] = useState(true);\n    const [icon, setIcon] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [feelsLike, setFeelsLike] = useState(\"\");\n    const [humidity, setHumidity] = useState(\"\")\n    \n    const api = {\n        key: \"205f180b761c4200a0855b16bc61d9f8\",\n        base: \"https://api.openweathermap.org/data/2.5/weather?q=\",\n        iconImg: \"https://openweathermap.org/img/wn/\"\n    }\n\n    const url = `${api.base}${props.city}&appid=${api.key}&units=metric`\n\n    const imgURL = `${api.iconImg}${icon}@2x.png`\n\n    // const weatherIcon = {\n    //     if ({icon} === \"undefined\") {\n    //         return null\n    //     } else {\n    //         return \n    //     }\n    // }\n\n    useEffect(() => {\n        axios.get(url)\n            .then(response => {\n                const info = response.data\n                setWeather(info.main.temp)\n                \n                setIcon(info.weather[0].icon)\n                setCity(info.name + \", \" + info.sys.country)\n                setDescription(info.weather[0].description)\n                setFeelsLike(info.main.feels_like)\n                setHumidity(info.main.humidity)\n                console.log(info)\n                // setIcon(response.data.weather.[0].icon)\n            }).catch((error) => {\n                setWeather(\"Enter a valid city\")\n                // validCity = false\n                setValidCity(false)\n            })\n        \n    }, [url])\n\n\n\n//    const getWeather = async (e) => {\n//         const api_call = await fetch(`{http://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=${api.key}&units=metric`);\n//         const data = await api_call.json();\n//         console.log(data)\n//     }\nuseEffect( () => {\n    console.log(validCity);\n}, [validCity]);\n\n    return (<div>\n    {/* {validCity ?  (<validWeather weather={weather} img={imgURL}/>) : (<h1>Enter a valid city pls</h1> )} */}\n        {validCity ? (<ValidWeather humidity={humidity} feelsLike={feelsLike} description={description} city={city} weather={weather} img={imgURL}/>) : <h1 className={classes.incorrect}>Please enter a valid city.</h1>}\n        {/* <ValidWeather validCity={validCity} humidity={humidity} feelsLike={feelsLike} description={description} city={city} weather={weather} img={imgURL}/> */}\n    {/* {validCity ? <h1>Hello</h1> : <p>Bye</p>} */}\n    {/* <img src={`${api.iconImg}${icon}@2x.png\"`} ></img> */}\n\n    {/* <p>{imgURL}</p> */}\n\n    {/* (<p>{weather}°C</p>) */}\n  \n\n    {/* { ({icon} === \"\") ? null : <img src={imgURL}></img>} */}\n    \n    </div>)\n}\n\nexport default Weather;","import {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Flip from \"react-reveal/Flip\";\n\nconst useStyles = makeStyles(theme => ({\n    context: {\n        // textAlign: \"center\",\n        // width: \"60%\"\n        fontStyle: \"italic\",\n        fontWeight: \"500\",\n        fontSize: \"2rem\",\n        textShadow: \"2px 2px white\",\n        marginTop: \"2px\"\n    },\n    quoteBody: {\n        background: \"#e6e6fa\",\n        textAlign: \"center\",\n        // justifyContent: \"center\",\n        // alignContent: \"center\"\n        marginTop: \"3%\",\n        width: \"60%\",\n        margin: \"auto\",\n        padding: \"15px\",\n        borderRadius: \"25px\",\n        fontFamily: \"'Lato', serif\",\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n        // opacity: \"0.95\",\n    },\n    author: {\n        fontSize: \"1.4rem\",\n        fontWeight: \"580\",\n        marginTop: \"2px\",\n        marginBottom: \"0\"\n    }\n  //   mainReport: {\n  //     height: \"100vh\"\n  //   }\n  }));\n  \n\nfunction Quote() {\n    const classes = useStyles();\n    const [quote, setQuote] = useState(\"\");\n    const [author, setAuthor] = useState(\"\");\n  //  const [doneLoad, setDoneLoad] = useState(false);\n\n    const url = \"https://api.quotable.io/random\";\n\n    // const getQuote = () => {\n    //     axios.get(\"https://api.quotable.io/random\").then(\n    //         (response) => {\n    //             setQuote(response.data.content);\n    //             setAuthor(response.data.author);\n    //             setDoneLoad(true);\n    //     })\n    // }\n\n    useEffect(() => {\n        axios.get(url)\n            .then(response => {\n                setQuote(response.data.content);\n                setAuthor(response.data.author);\n            })\n    }, [url])\n\n    // const getNewQuote = async () => {\n    //     try {\n    //       const response = await fetch(\"https://api.quotable.io/random\");\n    //       const data = await response.json();\n    //       if (!response.ok) throw new Error(data);\n    //       this.setState({ data });\n    //     } catch (error) {\n    //       // If the API request failed, log the error to console and update state\n    //       // so that the error will be reflected in the UI.\n    //       console.error(error);\n    //       this.setState({ data: { content: \"Opps... Something went wrong\" } });\n    //     }\n    //   };\n    \n\n    return  <Flip bottom duration=\"2250\" delay=\"1250\"><div className={classes.quoteBody}><h3 className={classes.context}>\"{quote}\"</h3>\n    <p className={classes.author}>{author}</p></div></Flip>\n    //<div><button onClick={getQuote}>Get a quote!</button>\n   \n}\n\nexport default Quote","import {useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typewriter } from 'react-typewriting-effect';\nimport 'react-typewriting-effect/dist/index.css';\n\nconst useStyles = makeStyles(theme => ({\n    time: {\n        fontWeight: \"450\",\n        fontSize: \"8rem\",\n        \n        display: \"inline\",\n        background: \"white\",\n        borderRadius: \"10px\",\n        padding: \"3px 18px\",\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n\n    },\n    // theTime: {\n    //     justifyContent: \"center\",\n    //     background: \"white\",\n    //     display: \"inline\"\n    // }\n    theTime: {\n        textAlign: \"center\",\n        marginTop: \"10vh\"\n    },\n    theDate: {\n        marginTop: \"20px\",\n        fontSize: \"2.4rem\",\n        fontFamily: \"'Source Sans Pro', sans-serif\",\n        fontStyle: \"italic\",\n        fontWeight: \"500\",\n        marginBottom: \"20px\",\n        textShadow: \"2px 2px 5px white\"\n        \n    },\n    theGreeting: {\n        fontSize: \"4rem\",\n        fontFamily: \"'PT Serif', serif\",\n        fontWeight: \"540\",\n        background: \"#ff9aa2\",\n        color: \"white\",\n        borderRadius: \"10px\",\n        padding: \"8px\",\n        textShadow: \"2px 2px #DC143C\"\n    }\n\n  }));\n\nfunction Time(props) {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    const classes = useStyles();\n    let now = new Date().toLocaleTimeString(\"en-US\");\n    const [time, setTime] = useState(now);\n    var today = new Date()\n    var curHr = today.getHours();\n    var greeting;\n    // var theDate = today.slice(0, 14);\n    var month = today.getUTCMonth() + 1;\n    var day = today.getUTCDate();\nvar year = today.getUTCFullYear();\n    const newDate = today.toLocaleDateString(undefined, options);\n\n\n    // const theDate = today.toDateString.slice(0,14)\n    \n\n    if (curHr < 12) {\n      greeting = \"Good Morning\"\n    } else if (curHr < 18) {\n      greeting = 'Good Afternoon'\n    } else {\n      greeting = 'Good Evening'\n    }\n\n    const fullGreeting = greeting + \", \" + props.name + \"!\"\n    function updateTime() {\n        const newTime = new Date().toLocaleTimeString(\"en-US\");\n        setTime(newTime);\n    }\n    \n    setInterval(updateTime, 1000);\n\n    return (\n        <div className={classes.theTime}>  <h1 className={classes.time}>{time}</h1>\n         \n        <h3 className={classes.theDate}>  {newDate}</h3>\n        {/* <p>{greeting({hours})} {hours}</p> */}\n        {/* <h1 >{greeting}, {props.name}</h1> */}\n        <Typewriter className={classes.theGreeting} string={fullGreeting}  delay={60}  stopBlinkinOnComplete />\n         {/* <button onClick={updateTime}>Get Time</button> */}\n        </div>\n      );\n}\n\nexport default Time;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core/\";\nimport Weather from \"./weather\";\n// import { Header } from './Header';\nimport Quote from \"./quote\";\nimport Time from \"./timer\";\nimport particlesConfig from \"./particlesConfig\";\nimport Particles from \"react-particles-js\";\nimport { motion } from \"framer-motion\";\nimport Fade from \"react-reveal/Fade\";\nimport \"./Report.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  textCenter: {\n    textAlign: \"center\",\n  },\n  //   main: {\n  //       width: \"100vw\"\n  //   },\n  button: {\n    // margin: theme.spacing(1),\n    // background: 'blue',\n    // padding: \"5%\",\n    marginBottom: \"2%\",\n    boxShadow: \"inset 0px 1px 0px 0px #85c1f5\",\n    background: \"linear-gradient(to bottom, #61b0ff 5%, #80b5ea 100%)\",\n    backgroundColor: \"#61b0ff\",\n    borderRadius: \"6px\",\n    border: \"1px solid #84bbf3\",\n    display: \"inline-block\",\n    color: \"#ffffff\",\n    fontSize: \"20px\",\n    fontWeight: \"bold\",\n    padding: \"8px 30px\",\n    textDecoration: \"none\",\n    textShadow: \"0px 1px 0px #528ecc\",\n  },\n  //   mainReport: {\n  //     height: \"100vh\"\n  //   }\n}));\n\nconst Confirm = ({ formData, prevStep, nextStep }) => {\n  const classes = useStyles();\n  const { name, city } = formData;\n  // className={classes.main}\n  return (\n    <div className=\"reportPage\">\n      <Particles\n        // style={{position: \"absolute\"}} height=\"100vh\" width=\"100vw\"\n        // style={{\n        //       position: \"absolute\",\n        //       top: 0,\n        //       left: 0,\n        //       width: \"100%\",\n        //       height: \"100%\"\n        //     }}\n        params={particlesConfig}\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <Time name={name} />\n        <Quote />\n\n        {/* <List>\n          <ListItem>\n            <ListItemText\n              primary='First Name'\n              secondary={name}\n              className={classes.textCenter}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText\n              primary='City'\n              secondary={city}\n              className={classes.textCenter}\n            />\n          </ListItem>\n        </List> */}\n\n        <Weather city={city} />\n        {/* className={classes.textCenter} */}\n        <div className={classes.textCenter}>\n          {/* <Button\n            color='secondary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => prevStep()}\n          >\n            Back\n          </Button> */}\n          <Fade bottom delay=\"3000\">\n            <motion.button\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.9 }}\n              type=\"submit\"\n              variant=\"contained\"\n              className={classes.button}\n              onClick={() => prevStep()}\n            >\n              Back\n            </motion.button>\n          </Fade>\n\n          {/* <Button\n            color='primary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => nextStep()}\n          >\n            Confirm & Continue\n          </Button> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nConfirm.propTypes = {\n  formData: PropTypes.object.isRequired,\n  prevStep: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired,\n};\n\nexport default Confirm;\n","import React, { useState } from 'react';\n// import { FormUserDetails } from './FormUserDetails';\n// import { FormPersonalDetails } from './FormPersonalDetails';\n// import { Confirm } from './Confirm';\n// import { Success } from './Success';\nimport FormUserDetails from \"./InitalForm\";\nimport Report from \"./Report\"\n\n\nconst UserForm = () => {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    name: '',\n    city: ''\n  });\n  const nextStep = () => setStep(prev => prev + 1);\n  const prevStep = () => {setStep(prev => prev - 1)\nsetFormData({\n    name: '',\n    city: ''\n  })}\n  switch (step) {\n    case 1:\n      return (\n        <FormUserDetails\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n        />\n        \n      );\n    case 2:\n      return (<Report\n          formData={formData}\n          setFormData={setFormData}\n          nextStep={nextStep}\n          prevStep={prevStep}\n        />\n      );\n  \n    default:\n      return <h1>Sorry not found, refresh please.</h1>;\n  }\n};\n\nexport default UserForm;","import logo from './logo.svg';\nimport './App.css';\n//import Chart from \"./components/billboard\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n// import IntroForm from \"./components/form\"\n// import MainForm from \"./components/formmain.js\"\nimport Main from \"./components/Main\"\n\n\nfunction App() {\n  return ( <Main />\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as Yup from \"yup\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}