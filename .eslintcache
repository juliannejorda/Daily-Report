[{"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/index.js":"1","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/App.js":"2","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/reportWebVitals.js":"3","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/form.jsx":"4","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/data.jsx":"5","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/Main.jsx":"6","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/InitalForm.jsx":"7","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/Report.jsx":"8","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/weather.jsx":"9","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/quote.jsx":"10","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/timer.jsx":"11","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/particlesConfig.js":"12","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/validWeather.jsx":"13"},{"size":576,"mtime":1609375016992,"results":"14","hashOfConfig":"15"},{"size":535,"mtime":1609909721777,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609114864004,"results":"17","hashOfConfig":"15"},{"size":2880,"mtime":1609392128764,"results":"18","hashOfConfig":"19"},{"size":119,"mtime":1609390380700,"results":"20","hashOfConfig":"19"},{"size":1089,"mtime":1609910753039,"results":"21","hashOfConfig":"15"},{"size":6376,"mtime":1609902867502,"results":"22","hashOfConfig":"15"},{"size":3352,"mtime":1609911703473,"results":"23","hashOfConfig":"15"},{"size":4599,"mtime":1609912894625,"results":"24","hashOfConfig":"15"},{"size":2682,"mtime":1609906325020,"results":"25","hashOfConfig":"15"},{"size":2744,"mtime":1609910514095,"results":"26","hashOfConfig":"15"},{"size":2014,"mtime":1609814303971,"results":"27","hashOfConfig":"15"},{"size":2794,"mtime":1609913289289,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"tpg5b",{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"8ipp7r",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/index.js",["66"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as Yup from \"yup\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["67","68"],"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/App.js",["69","70","71","72","73","74","75"],"import logo from './logo.svg';\nimport './App.css';\n//import Chart from \"./components/billboard\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n// import IntroForm from \"./components/form\"\n// import MainForm from \"./components/formmain.js\"\nimport Main from \"./components/Main\"\n\n\nfunction App() {\n  return ( <Main />\n\n\n  );\n}\n\nexport default App;\n","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/reportWebVitals.js",[],"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/form.jsx",["76","77","78","79","80"],"import {useState} from \"react\"\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { Formik } from \"formik\";\nimport * as yup from 'yup';\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Col from \"react-bootstrap/Col\";\nimport Data from \"./data\"\nimport ReactDOM from \"react\";\n\n\n\nconst schema = yup.object({\n    name: yup.string()\n    .min(2, \"Must be at least 2 characters\")\n    .max(50, \"Name can't be longer than 50 characters\")\n    .required(\"*Name is Required\"),\n    city: yup.string()\n    .min(1, 'Enter valid city')\n    .required('*Enter a valid city')\n  });\n\n\n\n\nfunction IntroForm() {\n  // const [status, setStatus] = useState(true);\n  const [data, setData] = useState();\n  function finalSubmit(props) {\n    console.log(props)\n  }\n\n\n    return(\n<div className=\"the-form\">\n  <h1 className=\"intro-text\">PlaceHolder</h1>\n    <Container  id=\"center-con\">\n  <Formik\n  validationSchema={schema}\n  initialValues={{\n    name: \"\",\n    city: \"\",\n  }}\n  onSubmit={(values, {setSubmitting}) => {\n    setTimeout(() => {\n      const formData = JSON.stringify(values, null, 2);\n      console.log(formData)\n     \n     setData(formData)\n      setSubmitting(false);\n      // setStatus(false)\n\n\n    }, 1000);\n  }}>{( {values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting }) => (\n  <Form noValidate onSubmit={handleSubmit}  className=\"main-colour\">\n    <Form.Group controlId=\"validationFormik01\">\n      <Form.Label>Name</Form.Label>\n      <Form.Control onChange={handleChange} name=\"name\" size=\"lg\" type=\"text\" placeholder=\"Enter name\" onBlur={handleBlur} value={values.name} onChange={handleChange}\n          />\n            {touched.name && errors.name ? (\n                <div className=\"error-message\">{errors.name}</div>\n              ): null}\n                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n    </Form.Group>\n    <Form.Group controlId=\"validationFormik02\">\n      <Form.Label>City</Form.Label>\n      <Form.Control onChange={handleChange} name=\"city\" type=\"text\" placeholder=\"City\" onBlue={handleBlur} value={values.city}/>\n      { touched.city && errors.city ? (\n        <div className=\"error-message\">{errors.city}</div>\n      ): null}\n    </Form.Group>\n    <Button onClick={(event) => {\n      finalSubmit({data}.data)\n    }} className=\"submit-button\" variant=\"primary\" type=\"submit\"> \n  Submit\n</Button>\n  </Form>)}</Formik></Container> <Data info={data} />\n</div>)} \n\n\nfunction Main() {\n  const [submitted, setSubmitted] = useState(false);\n  \n  function submitForm() {\n    setSubmitted(true)\n  }\n\n \n\n  return <div>{!submitted ? ( <IntroForm  /> ) : (<Data />)}\n\n\n</div>\n}\n\n\nexport default Main;\n// false -> is submitting data -> render a diff component\n// true render form\n",["81","82"],"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/data.jsx",["83"],"import {useState} from \"react\"\n\nfunction Report(props) {\n\n\n\n    return <h1> {props.info}</h1>\n}\n\nexport default Report;","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/Main.jsx",[],"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/InitalForm.jsx",["84","85","86","87","88"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik, Form, Field } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Header } from './Header';\nimport { Button } from '@material-ui/core';\nimport * as yup from 'yup';\nimport Container from \"react-bootstrap/Container\";\nimport { StylesProvider } from \"@material-ui/core/styles\";\nimport { withStyles } from '@material-ui/core/styles';\nimport ParticleEffectButton from 'react-particle-effect-button'\nimport { motion } from \"framer-motion\";\nimport particlesConfig from \"./particlesConfig\";\nimport Particles from \"react-particles-js\";\nimport { Typewriter } from 'react-typewriting-effect';\nimport 'react-typewriting-effect/dist/index.css';\nimport Fade from \"react-reveal/Fade\"\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    // background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    // background: \"linear-gradient(to left bottom, #3494e6, #7a8ce7, #ab82dc, #d176c8, #ec6ead)\",\n    background: \"#F0F8FF\",\n    opacity: \"0.9\",\n    width: \"800px\",\n    // marginLeft: \"22%\",\n    marginLeft: \"22vw\",\n    // padding: \"5% 0\"\n    // height: \"\"\n    borderRadius: \"35px\",\n    boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    marginTop: \"10px\"\n  },\n  button: {\n    // margin: theme.spacing(1),\n    // background: 'blue',\n    // padding: \"5%\",\n    margin: \"3%\",\n  boxShadow: \"inset 0px 1px 0px 0px #85c1f5\",\n  background: \"linear-gradient(to bottom, #61b0ff 5%, #80b5ea 100%)\",\n\tbackgroundColor: \"#61b0ff\",\n\tborderRadius: \"6px\",\n\tborder: \"1px solid #84bbf3\",\n\tdisplay: \"inline-block\",\n\tcolor: \"#ffffff\",\n\tfontSize: \"20px\",\n\tfontWeight: \"bold\",\n\tpadding: \"8px 30px\",\n\ttextDecoration: \"none\",\n\ttextShadow: \"0px 1px 0px #528ecc\",\n  },\n  // inputText: {\n  //   border: '1px solid rgba(252, 252, 252, 0.4)',\n  //   background: 'rgba(252, 252, 252, 0.2)',\n  //   width: \"600px\",\n  //   // marginTop: \"50%\"\n  // },\n  // inner: {\n  //   background: \"linear-gradient(to right bottom, #a2d2ff, #b4ccff, #c9c5fc, #ddbdf3, #efb6e5, #f1b4df, #f2b2d9, #f3b0d3, #eab1d7, #e0b2d9, #d6b3db, #cdb4db)\",\n  //   height: \"100vh\"\n  // }\n  introText: {\n    fontSize: \"4rem\",\n    fontFamily:  \"'Playfair Display', serif\",\n    verticalAlign: \"middle\"\n  },\n  mainText: {\n    marginTop: \"10%\",\n    textAlign: \"center\",\n  \n  },\n  smallText: {\n    fontWeight: \"600\",\n    fontStyle: \"italic\",\n    fontSize: \"20px\"\n  }\n}));\n\nconst validationSchema = yup.object({\n    name: yup.string()\n    .min(2, \"Must be at least 2 characters\")\n    .max(50, \"Name can't be longer than 50 characters\")\n    .required(\"*Name is Required\"),\n    city: yup.string()\n    .min(1, 'Enter valid city')\n    .required('*Enter a valid city')\n  });\n  const state = {\n    hidden: false\n  }\n\n  const FormUserDetails = ({ formData, setFormData, nextStep }) => {\n  const classes = useStyles();\n  return (\n<>\n<Particles \n// style={{position: \"absolute\"}} height=\"100vh\" width=\"100vw\" \n// style={{\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\"\n//     }}\nparams={particlesConfig} />\n<div  style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\"\n        }} >\n        {/* <motion.div\n  // style={{\n  //         width: \"150px\",\n  //         height: \"150px\",\n  //         background: \"black\"\n  //       }}\n  className={classes.mainText}\n  initial={{ scale: 0 }}\n  animate={{ rotate: 0, scale: 1 }}\n  transition={{\n    type: \"spring\",\n    stiffness: 260,\n    damping: 20,\n    delay: 0.5\n  }}\n  > */}\n  <div className={classes.mainText}>\n   <Typewriter\n      string='Hello There...'\n      delay={120}\n      className={classes.introText}\n      id=\"introMainFont\"\n      stopBlinkinOnComplete\n    />\n  <br></br>\n    <Typewriter\n      string='Please complete the following form:'\n      delay={70}\n      stopBlinkinOnComplete\n      className={classes.smallText}\n    />\n    </div>\n    {/* <h1 className={classes.introText}>Hello there</h1> */}\n  {/* </motion.div> */}\n  <Fade bottom>\n      <StylesProvider injectFirst>\n      {/* <Header title='Enter User Details' /> */}\n      <div className=\"forForm\">\n      <Formik\n        initialValues={formData}\n        onSubmit={values => {\n          setFormData(values);\n          nextStep();\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ errors, touched }) => (\n          <Form className={classes.form}>\n          \n            <Field\n              className=\"inputField\"\n              name='name'\n              label='Enter Name'\n              margin='normal'\n              size=\"large\"\n              as={TextField}\n              error={touched.name && errors.name}\n              helperText={touched.name && errors.name}\n            />\n            <Field\n            className=\"inputField\"\n              name='city'\n              label='Enter city'\n              margin='normal'\n              size=\"large\"\n              as={TextField}\n              error={touched.city && errors.city}\n              helperText={touched.city && errors.city}\n            />\n            {/* <motion.button\n            whileHover={{ scale: 1.1 }}\n    whileTap={{ scale: 0.9 }} >\n            <Button\n            // id=\"button\"\n            // id=\"styledButton\"\n              type='submit'\n              variant='contained'\n              color='primary'\n              // className={classes.button}\n              size=\"large\"\n              \n            >\n              Submit\n            </Button>\n            </motion.button> */}\n            <motion.button \n            whileHover={{ scale: 1.1 }}\n    whileTap={{ scale: 0.9 }} \n    type='submit'   variant='contained'\n    className={classes.button}\n\n    >Submit</motion.button>\n\n            {/* <ParticleEffectButton\n        \n      >\n        BUTTON CONTENT GOES HERE\n      </ParticleEffectButton> */}\n\n          </Form> \n        )}\n      </Formik>\n      </div>\n      </StylesProvider>\n      </Fade>\n    </div>\n    </>\n\n  );\n};\n\nFormUserDetails.propTypes = {\n  formData: PropTypes.object.isRequired,\n  setFormData: PropTypes.func.isRequired,\n  nextStep: PropTypes.func.isRequired\n};\n\nexport default FormUserDetails;","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/Report.jsx",["89","90","91","92"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { List, ListItem, ListItemText } from '@material-ui/core/';\nimport Weather from \"./weather\"\n// import { Header } from './Header';\nimport Quote from \"./quote\";\nimport Time from \"./timer\";\nimport particlesConfig from \"./particlesConfig\";\nimport Particles from \"react-particles-js\";\nimport { motion } from \"framer-motion\";\nimport Fade from \"react-reveal/Fade\";\n\n\nconst useStyles = makeStyles(theme => ({\n  textCenter: {\n    textAlign: 'center'\n  },\n//   main: {\n//       width: \"100vw\"\n//   },\n  button: {\n    // margin: theme.spacing(1),\n    // background: 'blue',\n    // padding: \"5%\",\n    marginBottom: \"10px\",\n  boxShadow: \"inset 0px 1px 0px 0px #85c1f5\",\n  background: \"linear-gradient(to bottom, #61b0ff 5%, #80b5ea 100%)\",\n\tbackgroundColor: \"#61b0ff\",\n\tborderRadius: \"6px\",\n\tborder: \"1px solid #84bbf3\",\n\tdisplay: \"inline-block\",\n\tcolor: \"#ffffff\",\n\tfontSize: \"20px\",\n\tfontWeight: \"bold\",\n\tpadding: \"8px 30px\",\n\ttextDecoration: \"none\",\n\ttextShadow: \"0px 1px 0px #528ecc\",\n  },\n//   mainReport: {\n//     height: \"100vh\"\n//   }\n}));\n\nconst Confirm = ({ formData, prevStep, nextStep }) => {\n  const classes = useStyles();\n  const { name, city } = formData;\n  return (<div className={classes.main}><Particles \n        // style={{position: \"absolute\"}} height=\"100vh\" width=\"100vw\" \n        // style={{\n        //       position: \"absolute\",\n        //       top: 0,\n        //       left: 0,\n        //       width: \"100%\",\n        //       height: \"100%\"\n        //     }}\n        params={particlesConfig} />\n            <div style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\"\n        }}>\n    <Time name={name}/>\n    <Quote />\n      <div>\n        {/* <List>\n          <ListItem>\n            <ListItemText\n              primary='First Name'\n              secondary={name}\n              className={classes.textCenter}\n            />\n          </ListItem>\n\n\n          <ListItem>\n            <ListItemText\n              primary='City'\n              secondary={city}\n              className={classes.textCenter}\n            />\n          </ListItem>\n        </List> */}\n\n        <Weather city={city} />\n        <div className={classes.textCenter}>\n          {/* <Button\n            color='secondary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => prevStep()}\n          >\n            Back\n          </Button> */}\n          <Fade bottom delay=\"3000\">\n          <motion.button \n            whileHover={{ scale: 1.1 }}\n    whileTap={{ scale: 0.9 }} \n    type='submit'   variant='contained'\n    className={classes.button}\n            onClick={() => prevStep()}\n    >Back</motion.button>\n    </Fade>\n\n          {/* <Button\n            color='primary'\n            variant='contained'\n            className={classes.button}\n            onClick={() => nextStep()}\n          >\n            Confirm & Continue\n          </Button> */}\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n};\n\n\n\nConfirm.propTypes = {\n    formData: PropTypes.object.isRequired,\n    prevStep: PropTypes.func.isRequired,\n    nextStep: PropTypes.func.isRequired\n  };\n  \n\nexport default Confirm","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/weather.jsx",["93"],"import {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport ValidWeather from \"./validWeather\";\n\n\n// function Weather(props) {\n//     const [query, setQuery] = useState('');\n//     const [weather, setWeather] = useState({});\n\n\n//     const search = evt => {\n//         if (evt.key === \"Enter\") {\n//           fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n//             .then(res => res.json())\n//             .then(result => {\n//               setWeather(result);\n//               setQuery('');\n//               console.log(result);\n//             });\n//         }\n//       }\n\n   \n    \n\n//     let today = new Date().toLocaleDateString() \n\n//     return (\n//         <div>\n//             {/* <h3>{setQuery(props.city)}</h3> */}\n//             <main>\n//             <h2>{props.city}</h2>\n       \n//     <p> {weather.name}</p>\n    \n\n        \n//         {(typeof weather.main != \"undefined\") ? (\n//         <div>\n//           <div className=\"location-box\">\n//             <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n//             <div className=\"date\">{today}</div>\n//           </div>\n//           <div className=\"weather-box\">\n//             <div className=\"temp\">\n//               {Math.round(weather.main.temp)}°c\n//             </div>\n//             <div className=\"weather\">{weather.weather[0].main}</div>\n//           </div>\n//         </div>\n//         ) : ('')}\n//       </main>\n//         </div>\n//     )\n// }\n\nconst useStyles = makeStyles(theme => ({\n    incorrect: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        background: \"#C9D6FF\",\n        color: \"white\",\n        textShadow: \"2px 2px black\",\n        padding: \"2%\"\n    }\n  //   mainReport: {\n  //     height: \"100vh\"\n  //   }\n  }));\n\nfunction Weather(props){\n    const classes = useStyles();\n    const [weather, setWeather] = useState(\"\");\n    const [validCity, setValidCity] = useState(true);\n    const [icon, setIcon] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [feelsLike, setFeelsLike] = useState(\"\");\n    const [humidity, setHumidity] = useState(\"\")\n    \n    const api = {\n        key: \"205f180b761c4200a0855b16bc61d9f8\",\n        base: \"http://api.openweathermap.org/data/2.5/weather?q=\",\n        iconImg: \"http://openweathermap.org/img/wn/\"\n    }\n\n    const url = `${api.base}${props.city}&appid=${api.key}&units=metric`\n\n    const imgURL = `${api.iconImg}${icon}@2x.png`\n\n    // const weatherIcon = {\n    //     if ({icon} === \"undefined\") {\n    //         return null\n    //     } else {\n    //         return \n    //     }\n    // }\n\n    useEffect(() => {\n        axios.get(url)\n            .then(response => {\n                const info = response.data\n                setWeather(info.main.temp)\n                \n                setIcon(info.weather[0].icon)\n                setCity(info.name + \", \" + info.sys.country)\n                setDescription(info.weather[0].description)\n                setFeelsLike(info.main.feels_like)\n                setHumidity(info.main.humidity)\n                console.log(info)\n                // setIcon(response.data.weather.[0].icon)\n            }).catch((error) => {\n                setWeather(\"Enter a valid city\")\n                // validCity = false\n                setValidCity(false)\n            })\n        \n    }, [url])\n\n\n\n//    const getWeather = async (e) => {\n//         const api_call = await fetch(`{http://api.openweathermap.org/data/2.5/weather?q=${props.city}&appid=${api.key}&units=metric`);\n//         const data = await api_call.json();\n//         console.log(data)\n//     }\nuseEffect( () => {\n    console.log(validCity);\n}, [validCity]);\n\n    return (<div>\n    {/* {validCity ?  (<validWeather weather={weather} img={imgURL}/>) : (<h1>Enter a valid city pls</h1> )} */}\n        {/* {validCity ? (<ValidWeather humidity={humidity} feelsLike={feelsLike} description={description} city={city} weather={weather} img={imgURL}/>) : <h1 className={classes.incorrect}>Please enter a valid city.</h1>} */}\n        <ValidWeather validCity={validCity} humidity={humidity} feelsLike={feelsLike} description={description} city={city} weather={weather} img={imgURL}/>\n    {/* {validCity ? <h1>Hello</h1> : <p>Bye</p>} */}\n    {/* <img src={`${api.iconImg}${icon}@2x.png\"`} ></img> */}\n\n    {/* <p>{imgURL}</p> */}\n\n    {/* (<p>{weather}°C</p>) */}\n  \n\n    {/* { ({icon} === \"\") ? null : <img src={imgURL}></img>} */}\n    \n    </div>)\n}\n\nexport default Weather;","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/quote.jsx",[],"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/timer.jsx",["94","95","96"],"import {useState} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typewriter } from 'react-typewriting-effect';\nimport 'react-typewriting-effect/dist/index.css';\n\nconst useStyles = makeStyles(theme => ({\n    time: {\n        fontWeight: \"450\",\n        fontSize: \"8rem\",\n        \n        display: \"inline\",\n        background: \"white\",\n        borderRadius: \"10px\",\n        padding: \"3px 18px\",\n        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n\n    },\n    // theTime: {\n    //     justifyContent: \"center\",\n    //     background: \"white\",\n    //     display: \"inline\"\n    // }\n    theTime: {\n        textAlign: \"center\",\n        marginTop: \"10vh\"\n    },\n    theDate: {\n        marginTop: \"20px\",\n        fontSize: \"2.4rem\",\n        fontFamily: \"'Source Sans Pro', sans-serif\",\n        fontStyle: \"italic\",\n        fontWeight: \"500\",\n        marginBottom: \"20px\",\n        textShadow: \"2px 2px 5px white\"\n        \n    },\n    theGreeting: {\n        fontSize: \"4rem\",\n        fontFamily: \"'PT Serif', serif\",\n        fontWeight: \"540\",\n        background: \"#ff9aa2\",\n        color: \"white\",\n        borderRadius: \"10px\",\n        padding: \"8px\",\n        textShadow: \"2px 2px #DC143C\"\n    }\n\n  }));\n\nfunction Time(props) {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n    const classes = useStyles();\n    let now = new Date().toLocaleTimeString(\"en-US\");\n    const [time, setTime] = useState(now);\n    var today = new Date()\n    var curHr = today.getHours();\n    var greeting;\n    // var theDate = today.slice(0, 14);\n    var month = today.getUTCMonth() + 1;\n    var day = today.getUTCDate();\nvar year = today.getUTCFullYear();\n    const newDate = today.toLocaleDateString(undefined, options);\n\n\n    // const theDate = today.toDateString.slice(0,14)\n    \n\n    if (curHr < 12) {\n      greeting = \"Good Morning\"\n    } else if (curHr < 18) {\n      greeting = 'Good Afternoon'\n    } else {\n      greeting = 'Good Evening'\n    }\n\n    const fullGreeting = greeting + \", \" + props.name + \"!\"\n    function updateTime() {\n        const newTime = new Date().toLocaleTimeString(\"en-US\");\n        setTime(newTime);\n    }\n    \n    setInterval(updateTime, 1000);\n\n    return (\n        <div className={classes.theTime}>  <h1 className={classes.time}>{time}</h1>\n         \n        <h3 className={classes.theDate}>  {newDate}</h3>\n        {/* <p>{greeting({hours})} {hours}</p> */}\n        {/* <h1 >{greeting}, {props.name}</h1> */}\n        <Typewriter className={classes.theGreeting} string={fullGreeting}  delay={60}  stopBlinkinOnComplete />\n         {/* <button onClick={updateTime}>Get Time</button> */}\n        </div>\n      );\n}\n\nexport default Time;","/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/particlesConfig.js",[],"/Users/juliannejorda/Desktop/web dev 2020 udemy/time/billboard react component/billboard/src/components/validWeather.jsx",["97"],"import { makeStyles } from '@material-ui/core/styles';\nimport Flip from \"react-reveal/Flip\";\n\nconst useStyles = makeStyles(theme => ({\n    theCity: {\n        color: \"white\",\n        paddingTop: \"10px\",\n        fontWeight: \"510\",\n        textShadow: \"2px 2px #696969\",\n        fontSize: \"3.25rem\"\n    },\n    main: {\n\n        background: \"rgba(201, 214, 255, 0.85)\",\n        // background: \"#D6EAF8\",\n        marginTop: \"3%\",\n        marginBottom: \"2%\",\n        textAlign: \"center\",\n        fontFamily: \"'Lato', serif\",\n        width: \"65%\",\n        margin: \"auto\",\n        overflow: \"auto\",\n        borderRadius: \"20px\",\n        boxShadow: \"0 4px 8px 0 rgba(255, 255, 255, 0.2), 0 6px 20px 0 rgba(255, 255, 255, 0.19)\",\n        paddingBottom: \"10px\"\n       },\n    temp: {\n        color: \"white\",\n        float: \"left\",\n        fontSize: \"5rem\",\n        // verticalAlign: \"center\"\n        lineHeight: \"128px\",\n        textShadow: \"2px 2px #696969\",\n    },\n    icon: {\n       float: \"right\",\n       width: \"150px\",\n       height: \"auto\",\n       marginLeft: \"22%\"\n    //    marginTop: \"0\",\n    //    marginRight: \"20%\"\n    //    width: \"250px\"\n    // display: \"block\",\n    // clear: \"both\"\n    },\n    wrapper: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(3, 1fr)\"\n    },\n    descrip: {\n        color: \"white\",\n        textAlign: \"left\",\n        \n    },\n    descripTitle: {\n        textShadow: \"2px 2px #696969\",\n        fontSize: \"3rem\"\n    },\n    feels: {\n        // whiteSpace: \"nowrap\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n    feelsHeading: {\n        // textDecoration: \"underline\",\n        textShadow: \"2px 2px 5px #696969\",\n        fontSize: \"1.7rem\"\n\n    },\n    feelsP: {\n        // textShadow: \"2px 2px 5px #696969\",\n        fontSize: \"1.7rem\",\n    }\n    // feelsP: {\n    //     fontSize: \"1.3rem\"\n    // }\n\n   //   mainReport: {\n   //     height: \"100vh\"\n   //   }\n   }));\n\n\nfunction ValidWeather(props) {\n    const classes = useStyles();\n    return <Flip bottom duration=\"2250\" delay=\"2000\"><div className={classes.main}>\n        <h1 className={classes.theCity}>{props.city}</h1>\n        <div className={classes.wrapper}>\n        <h3 className={classes.temp}>{props.weather}°C</h3>\n        <img className={classes.icon} src={props.img}></img>\n        <div className={classes.descrip}><h3 className={classes.descripTitle}>{props.description}</h3>\n        <div className={classes.feels}>\n        <h5 className={classes.feelsHeading} >Feels like:</h5><h5 className={classes.feelsP}>{props.feelsLike}°C</h5>\n        <h5 className={classes.feelsHeading}>Humidity:</h5><h5 className={classes.feelsP}>{props.humidity}%</h5>\n        \n        </div>\n\n        </div>\n        </div>\n    </div>\n    </Flip>\n}\n\nexport default ValidWeather",{"ruleId":"98","severity":1,"message":"99","line":6,"column":13,"nodeType":"100","messageId":"101","endLine":6,"endColumn":16},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"98","severity":1,"message":"106","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":12},{"ruleId":"98","severity":1,"message":"107","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":12},{"ruleId":"98","severity":1,"message":"108","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"98","severity":1,"message":"109","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":11},{"ruleId":"98","severity":1,"message":"110","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":17},{"ruleId":"98","severity":1,"message":"111","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":9,"column":13,"nodeType":"100","messageId":"101","endLine":9,"endColumn":16},{"ruleId":"98","severity":1,"message":"112","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":8,"column":8,"nodeType":"100","messageId":"101","endLine":8,"endColumn":11},{"ruleId":"98","severity":1,"message":"114","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":66,"column":144,"nodeType":"117","endLine":66,"endColumn":167},{"ruleId":"98","severity":1,"message":"118","line":92,"column":12,"nodeType":"100","messageId":"101","endLine":92,"endColumn":22},{"ruleId":"102","replacedBy":"119"},{"ruleId":"104","replacedBy":"120"},{"ruleId":"98","severity":1,"message":"121","line":1,"column":9,"nodeType":"100","messageId":"101","endLine":1,"endColumn":17},{"ruleId":"98","severity":1,"message":"108","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"98","severity":1,"message":"110","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":17},{"ruleId":"98","severity":1,"message":"122","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":20},{"ruleId":"98","severity":1,"message":"123","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":28},{"ruleId":"98","severity":1,"message":"124","line":93,"column":9,"nodeType":"100","messageId":"101","endLine":93,"endColumn":14},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":16},{"ruleId":"98","severity":1,"message":"125","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"98","severity":1,"message":"126","line":5,"column":16,"nodeType":"100","messageId":"101","endLine":5,"endColumn":24},{"ruleId":"98","severity":1,"message":"127","line":5,"column":26,"nodeType":"100","messageId":"101","endLine":5,"endColumn":38},{"ruleId":"98","severity":1,"message":"128","line":73,"column":11,"nodeType":"100","messageId":"101","endLine":73,"endColumn":18},{"ruleId":"98","severity":1,"message":"129","line":60,"column":9,"nodeType":"100","messageId":"101","endLine":60,"endColumn":14},{"ruleId":"98","severity":1,"message":"130","line":61,"column":9,"nodeType":"100","messageId":"101","endLine":61,"endColumn":12},{"ruleId":"98","severity":1,"message":"131","line":62,"column":5,"nodeType":"100","messageId":"101","endLine":62,"endColumn":9},{"ruleId":"132","severity":1,"message":"133","line":90,"column":9,"nodeType":"134","endLine":90,"endColumn":55},"no-unused-vars","'Yup' is defined but never used.","Identifier","unusedVar","no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'logo' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'Formik' is defined but never used.","'InputGroup' is defined but never used.","'Col' is defined but never used.","'ReactDOM' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'submitForm' is defined but never used.",["135"],["136"],"'useState' is defined but never used.","'withStyles' is defined but never used.","'ParticleEffectButton' is defined but never used.","'state' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'classes' is assigned a value but never used.","'month' is assigned a value but never used.","'day' is assigned a value but never used.","'year' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]